name: CI_CD

on: [push]

jobs:

  unit_test_client:
    runs-on: ubuntu-latest
    container:
      image: node

    steps:
      - name: Pull latest code
        uses: actions/checkout@master
      
      - name: Install & Tests
        working-directory: ./client
        run: |
          npm install
          npm test -- --coverage
  
  build_push_client:
    runs-on: ubuntu-latest
    needs: unit_test_client

    steps:

      - name: Pull latest code
        uses: actions/checkout@master

      - name: Get Package name
        run:  |
          echo ::set-env name=PACKAGE_NAME::$(echo ${{ secrets.DOCKER_ID }}/${{github.event.repository.name}}-client)
        shell: bash

      - name: Docker login
        run:  docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PASSWORD }} docker.io

      - name: Build and Tag
        run: docker build -t ${PACKAGE_NAME}:${GITHUB_SHA:0:7} -t ${PACKAGE_NAME}:$(echo ${GITHUB_REF:11} | sed 's;/;_;g') -f ./client/Dockerfile ./client

      - name: Push to Docker Hub
        run: | 
          docker push ${PACKAGE_NAME}:${GITHUB_SHA:0:7} 
          docker push ${PACKAGE_NAME}:$(echo ${GITHUB_REF:11} | sed 's;/;_;g')

      - name: Tag stable and push
        if: github.ref == 'refs/heads/master'
        run: | 
          docker tag ${PACKAGE_NAME}:${GITHUB_SHA:0:7}  ${PACKAGE_NAME}:stable
          docker push ${PACKAGE_NAME}:stable

      - name: Tag latest and push
        if: github.ref == 'refs/heads/development'
        run: | 
          docker tag ${PACKAGE_NAME}:${GITHUB_SHA:0:7}  ${PACKAGE_NAME}:latest
          docker push ${PACKAGE_NAME}:latest


  unit_test_api:
    runs-on: ubuntu-latest
    container:
      image: node

    steps:
      - name: Pull latest code
        uses: actions/checkout@master
      
      - name: Install & Tests
        working-directory: ./server
        run: |
          npm install
          npm test -- --coverage
  
  build_push_api:
    runs-on: ubuntu-latest
    needs: unit_test_api

    steps:

      - name: Pull latest code
        uses: actions/checkout@master

      - name: Get Package name
        run:  |
          echo ::set-env name=PACKAGE_NAME::$(echo ${{ secrets.DOCKER_ID }}/${{github.event.repository.name}}-server)
        shell: bash

      - name: Docker login
        run:  docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PASSWORD }} docker.io

      - name: Build and Tag
        run: docker build -t ${PACKAGE_NAME}:${GITHUB_SHA:0:7} -t ${PACKAGE_NAME}:$(echo ${GITHUB_REF:11} | sed 's;/;_;g') -f ./server/Dockerfile ./server

      - name: Push to Docker Hub
        run: | 
          docker push ${PACKAGE_NAME}:${GITHUB_SHA:0:7} 
          docker push ${PACKAGE_NAME}:$(echo ${GITHUB_REF:11} | sed 's;/;_;g')

      - name: Tag stable and push
        if: github.ref == 'refs/heads/master'
        run: | 
          docker tag ${PACKAGE_NAME}:${GITHUB_SHA:0:7}  ${PACKAGE_NAME}:stable
          docker push ${PACKAGE_NAME}:stable

      - name: Tag latest and push
        if: github.ref == 'refs/heads/development'
        run: | 
          docker tag ${PACKAGE_NAME}:${GITHUB_SHA:0:7}  ${PACKAGE_NAME}:latest
          docker push ${PACKAGE_NAME}:latest
  
  build_push_nginx:
    runs-on: ubuntu-latest
    needs: [build_push_api, build_push_client]

    steps:

      - name: Pull latest code
        uses: actions/checkout@master

      - name: Get Package name
        run:  |
          echo ::set-env name=PACKAGE_NAME::$(echo ${{ secrets.DOCKER_ID }}/${{github.event.repository.name}}-nginx)
        shell: bash

      - name: Docker login
        run:  docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PASSWORD }} docker.io

      - name: Build and Tag
        run: docker build -t ${PACKAGE_NAME}:${GITHUB_SHA:0:7} -t ${PACKAGE_NAME}:$(echo ${GITHUB_REF:11} | sed 's;/;_;g') -f ./nginx/Dockerfile ./nginx

      - name: Push to Docker Hub
        run: | 
          docker push ${PACKAGE_NAME}:${GITHUB_SHA:0:7} 
          docker push ${PACKAGE_NAME}:$(echo ${GITHUB_REF:11} | sed 's;/;_;g')

      - name: Tag stable and push
        if: github.ref == 'refs/heads/master'
        run: | 
          docker tag ${PACKAGE_NAME}:${GITHUB_SHA:0:7}  ${PACKAGE_NAME}:stable
          docker push ${PACKAGE_NAME}:stable

      - name: Tag latest and push
        if: github.ref == 'refs/heads/development'
        run: | 
          docker tag ${PACKAGE_NAME}:${GITHUB_SHA:0:7}  ${PACKAGE_NAME}:latest
          docker push ${PACKAGE_NAME}:latest
